연산자 => 연산을 하도록 기호 
ㄴ 1항 연산자 - ++A 피연산자의 갯수(기준)
ㄴ 2항 연산자 - A >= B
ㄴ 3항 연산자 - 조건 연산자 => a ? b : c    ?가 연산자



연산의 종류
ㄴ 산술 연산자: +, -, *,  /, %(나머지)
ㄴ*증감 연산자 ++, --     -> type: 전위형++A, 후위형 A++
ㄴ 비교, 관계 연산자: ==, !=, >=, <=, >, <     ex) A>=B : A가 B 보다 크냐?



논리 연산자 - AND(&&), OR(||), NOT(!)       ex) int a = 10 에서 !a는 0으로 바뀜
비트 연산자 
ㄴ 연산 순서(계산 순서) - 1. 비트로 변환한다. 2. 2개의 피연산자를 위,아래로 쓴다. 3. 연산자를 이용해 게산한다.
ㄴ ex) & -> A=10, B=2 -> A&B = 2 -> 1010 & 0010 = 0010 => 2
ㄴ &(and), |(or), ^(x or), ~(not), >> (오른쪽 비트 이동), << (왼쪽 이동)
ㄴㄴ비트이동 ex) A = 10 -> A >> 2(2비트 옮김)의 원리는 1010 -> 0010 또한 이는 2의 n승을 나눈 것과 같다. 반대로 <<도 2의 n승을 곱한 것과 같다.



조건 연산자 -> ?  : => 수식, 변수 ? 수식, 변수  :  수식, 변수   ex) A = 10  B = 5  A>B(가 참이면) ? A : B에서 A를 선택



대입 연산자 -> "=" -> 복합 대입 연산자. ex) +=, *=, &=, <<=     



우선순위 
ㄴ대입연산자는 맨 마지막
ㄴ 관계연산자와 논리 연산자가 같이 있으면 관계연산자 먼저 ex) if(A >= 3 && B < 7) 비교 먼저
ㄴ ex) ++ A % 2 == 0 라면 ++A 먼저
ㄴ int A = 10, B = 5, C = 8
    A = B = C 라면 A,B,C 는 전부 8임
